@using System.Globalization;
@inject IStringLocalizer<App> L
<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <Authorizing>
                    <p style="@(lang=="ar" ? "direction: rtl" : "")">@L["state"]</p>
                </Authorizing>
                <NotAuthorized>
                    <h1 style="@(lang=="ar" ? "direction: rtl" : "")">@L["sorry"]</h1>
                    <p style="@(lang=="ar" ? "direction: rtl" : "")">@L["not-authorized"]</p>
                </NotAuthorized>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">@L["not-found"]</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>
@code{
    string lang = CultureInfo.CurrentCulture.Name.ToString();
}