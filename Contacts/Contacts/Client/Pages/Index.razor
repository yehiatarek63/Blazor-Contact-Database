@page "/"
@attribute [Authorize]
@using Contacts.Shared;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@using System.Globalization;
@inject HttpClient Http;
@inject NavigationManager UriHelper;
@inject IStringLocalizer<Index> L;


<div>
    <input id="Search" class="form-control w-50 mb-3" @bind="SearchTerm" @bind:event="oninput" @bind:after="() => Search()" placeholder="@L["search"] @L["by"] @L["first-name"], @L["last-name"] @L["or"] @L["email"]" />
</div>

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>
                @L["first-name"]
            </th>
            <th>
                @L["last-name"]
            </th>
            <th>
                @L["email"]
            </th>
            <th>
                @L["title"]
            </th>
            <th>
                @L["description"]
            </th>
            <th>
                @L["date-of-birth"]
            </th>
            <th>
                @L["is-married"]
            </th>
            <AuthorizeView Roles="contact-admin">
                <th>
                    @L["actions"]
                </th>
            </AuthorizeView>
        </tr>
    </thead>
    <tbody id="results">
        @if(AllContacts.Count > 0){
            foreach (var result in AllContacts)
            {
                <tr>
                    <td>@result.FirstName</td>
                    <td>@result.LastName</td>
                    <td>@result.Email</td>
                    <td>@L[@result.Title.ToString().ToLower()]</td>
                    <td>@result.Description</td>
                    <td>&rlm;@result.DateOfBirth.DateTime.ToString("yyyy/d/MM")</td>
                    <td >@((bool)result.MarriageStatus ? L["yes"] : L["no"])</td>
                    <AuthorizeView Roles="contact-admin">
                        <td>
                            <a @onclick="() => NavigateToEdit(result.Id)" class="btn btn-success">@L["edit"]</a>
                            <button class="btn btn-danger" @onclick="() => DeleteContact(result.Id)">@L["delete"]</button>
                        </td>
                    </AuthorizeView>
                </tr>
            }
        }
        else
        {
            <tr>
                <td  colspan="8">@L["no-results"]</td>
            </tr>
        }
    </tbody>
</table>
@code {
    public string SearchTerm { get; set; } = string.Empty;
    public List<Contact> AllContacts { get; set; } = new();
    protected override async Task OnInitializedAsync()
    {
        AllContacts = await Http.GetFromJsonAsync<List<Contact>>("/contacts");
    }
    private async Task Search()
    {
        if (!string.IsNullOrEmpty(SearchTerm))
        {
            AllContacts = await Http.GetFromJsonAsync<List<Contact>>($"/search-contact/{SearchTerm}");
        }
        else{
            AllContacts = await Http.GetFromJsonAsync<List<Contact>>("/contacts");
        }
    }
    private async Task DeleteContact(Guid id)
    {
        string stringId = id.ToString();
        await Http.DeleteAsync($"/delete-contact/{stringId}");
        AllContacts = await Http.GetFromJsonAsync<List<Contact>>("/contacts");
    }
    private void NavigateToEdit(Guid id)
    {
        string stringId = id.ToString();
        UriHelper.NavigateTo($"/Edit/{stringId}");
    }


}